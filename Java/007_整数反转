


``` java
/**
 * 给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。
 *
 * 示例 1:
 *
 * 输入: 123
 * 输出: 321
 *  示例 2:
 *
 * 输入: -123
 * 输出: -321
 * 示例 3:
 *
 * 输入: 120
 * 输出: 21
 * 注意:
 * 假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为
 * [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。
 * 来源：力扣（LeetCode）
 * 链接：https://leetcode-cn.com/problems/reverse-integer
 * 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 */
public static int reverse(int x) {
      if(x > (Math.pow(2, 31) - 1) || x < -Math.pow(2, 31)) {  //判断是否超出最大 最小范围
          return 0;
      }
      String valueOf = String.valueOf(x);
      //判断负数的情况
      if(valueOf.contains("-")) {
          StringBuilder sBuilders=new StringBuilder(valueOf.substring(valueOf.indexOf("-")+1).toString());
          Integer valueOf3=null;
          try {
              valueOf3 = Integer.parseInt("-"+sBuilders.reverse().toString());
          } catch (Exception e) {
              return 0;     //溢出就会抛异常  这里抛了异常说明溢出  就返回一个0
          }
          return valueOf3;
      }
      //判断正数的情况
      StringBuilder sBuilder=new StringBuilder(valueOf);
      StringBuilder reverse = sBuilder.reverse();
      Integer valueOf2 = null;
      try {
          valueOf2 = Integer.parseInt(reverse.toString());
      } catch (Exception e) {
          return 0;     //溢出就会抛异常  这里抛了异常说明溢出  就返回一个0
      }
      return valueOf2;
  }
```
